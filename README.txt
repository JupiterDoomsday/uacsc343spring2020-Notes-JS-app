I chose to implement the different types buttons to not just change the todo-type but also work as tabs that shows the list of todo items in its respective type tab. Each tab has its own color, The reason I chose this was because this is much more organized and easier for the user to look at their tasks. By having each task displayed based on the tab the user clicked, the list won't be overflowing with one long list of all the task that where made, the user instead has the control to filter their results and have an easier search for a specific task thats under a certain todo type.

The overall MVC functionality of how the data is stored in the Model, there are 3 tasklist arrays that store each item based on the Todo type, each array also has their own stack data strucure to handle their respective Redo functionaliity inorder to implement their own seperate redos for each todo type tab. I set it up like this because having the user being able to see the redo button be visually on their screen is a much more satisfying outcome, than having their be redo actions based on the overall order of all tasks that where implemented (hence the 3 seperate lists and 3 seperate task to make this possible). This makes the flow of a series of actions much more easyer for the user to follow since all the changes are visually presentable within the users current view. The clear all funciton also only clears the entire sub-todolist at the tab, so it will require to press the clear button 3 times at max to clear out your todo list entirely, this maybe more tedieous work than usual, but still reinforces user control that all actions have a visiable presentable outcome to the users view.

When handeling the empty task input issue, I just had it silently handled as an error check in the model. I don't think you need to alert the users that you left the input task empty, an mistake that is mostly likely from am action of User error. A pop up would be more anoying in this case and would require an unnecessary cost for a trivial interaction. The important thing is that an empty todo task wont be made and If nothing is happening when the users clicks on an empty text box, then the users can peice it togehter by themselves that they have to submit text in order to get the expected outcome from their interaction.

When the user does create a new item it will show the text in the todo list, multiple items will be in the same white/grey patern as implemented in HA2 since this helps distinguishing each item seperately for the users benefit. The edit button lies right next to the text in the form of a pencil and paper, This is a very common signifier online to indicate that an element has the ability to be edited, I'm using this button along with all the other button that are being visualy represented as a commonly used signifier in order to utilize the users ability to recognize universal symbols to have this information succesfully conveyed to them. On the far end of each todo item bar is a red cancel button which destroys the individual elemnt when the users presses it, this is a step in preventing user error when the user might want to edit a task but might accidentally click on the cancel button. So I decided to place the button far from the text itself and the edit button to prevent that user error. I also utilized a cancel button and the clear all button as images that are in red in order to convey to the users that these actions involve deletion/dire. The clear all is in a trash can in order to convey to "throw away" the entire page since each tab has its own cancel button, it's also placed at the very bottom below the todo list in order to prevent user error that someone accidentally clicks on it and erases the entire list. So the users might be able to figure out that is the trash can cause some dire consequeces to clear everything. 

The confimation button when adding a new item in the todo tab is a green circle with a plus, since green is commonly associated with confimation/growth in design principles, I've chosen to visualy convey to the user that this button allows you to add a new item to the todo-list when pressed. I also have the redo button conveyed as the rewind cycle button. The input button is right next to the text box input since the relationship of both elements contributes to the same reaction that the users is expecting. The redo is right next to the add button since its an action that also in apoximation of the add and text box, in this case removing/readding task elements from the tab.

Most of my design protoypes and feedback when interviewing players is that they prefer a mixture of text and images, hence the tabs and todo items are written out in text but the redo,add,clear all, and delete buttons are implemented by images to help balance out this entire design to be 50/50 text and images, the todo items take up most of the todo tab space so when the user has implemented alot of task.

The background is entirely black becuase I know most gamers and internet users prefer to use dark modes on websites and having a dark color allows the color coded elemnts to stand out more.

